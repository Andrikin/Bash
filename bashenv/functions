#!/usr/bin/env bash
# Estas funções estão restritas ao uso no terminal. Funções aqui descritas não irão funcionar em scripts

psgrep(){
	ps -aux | grep $1 | grep -v grep
}

pshistory(){
	history | grep $1
}

# Mostra os canais dos wifis da região. Utilizar para configurar o modem com o canal menos utilizado
nmchannelusage(){
	nmcli -f CHAN,SSID device wifi | grep --regex=[0-9]{1,} | sort -n
}

# Nnn file manager
nnncd(){
	# nnn "$@"
	# -c -> cli-only
	# -r -> show cp, mv progress
	# -u -> use selection if available
	# -A -> disable auto-enter directory
	# -N -> use libreadline (Ctrl-J to "'Enter' to continue")
	nnn -cruAN "$@"
	if [[ -f $NNN_TMPFILE ]]
	then
		. "$NNN_TMPFILE"
		rm -f "$NNN_TMPFILE" > /dev/null
	fi
}


#tabbed_st(){
#	TABBED_GUIA="$HOME/.local/share/tabbed_guia.num"
#	tabbed -c -r 2 st -w '' -T "Guia $(($(< $TABBED_GUIA)++))"
#}

# # Fff file manager
# fffcd(){
#    fff "$@"
#    endereco="$(< "${XDG_CACHE_HOME:=${HOME}/.cache}/fff/.fff_d")"
#    if [[ $endereco != $PWD ]];then
#        cd "$endereco"
#    fi
#    clear
# }

# Utilizar no lugar de sleep
snore(){
	# Usage: snore 1
    #        snore 0.2
    read -rt "$1" <> <(true) || true
}

# [a-z] to [A-Z]
__soft_capslock_on(){
	# stty olcuc
	for n in {97..122}
	do
		hex_c_lower="$(printf '\\x%x' $((n)))"
		hex_c_upper="$(printf '\\x%x' $((n-32)))"
		bind -m vi-insert $"\"$hex_c_lower\": \"$hex_c_upper\""
	done
	SOFT_CAPSLOCK=1
}

__soft_capslock_off(){
	# stty iuclc
	for n in {97..122}
	do
		hex_c_lower="$(printf '\\x%x' $((n)))"
		bind -m vi-insert $"\"$hex_c_lower\": self-insert"
	done
	SOFT_CAPSLOCK=0
}

# Bind: bind -m vi-insert $'"\xhh": "\xhh"'
# Revert bind with: bind -m vi-insert '"\xhh": self-insert'
__soft_capslock_toggle(){
	if (( !$SOFT_CAPSLOCK ))
	then
		__soft_capslock_on
	else
		__soft_capslock_off
	fi
	__prompt_build
}

__capslock_statusline(){
	local caps=''
	if (( $SOFT_CAPSLOCK ))
	then
		caps='CAPS'
	fi
	printf "$caps"
}

# WIP: Criar um jeito de redesenhar o prompt aqui
# teste com ansi vt100 commands para verificar se dá para redesenhar o prompt
# printf '\033[2K' # limpa linha
# printf "${PS1@P}" # redesenha prompt
__reset_soft_capslock(){
	# Reset soft capslock
	if (( $SOFT_CAPSLOCK ))
	then
		__soft_capslock_off
	fi
}

# Complete quote
# ASCII HEX code
__readline_insert_pair(){
	READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}${1}${READLINE_LINE:$READLINE_POINT}"
	# Get cursor on right place
	(( READLINE_POINT+=1 ))
}

# TODO: e esses comandos não printáveis?
# https://github.com/dylanaraps/pure-bash-bible - Escape Sequences
__prompt_build(){
	# \u - user, \w - diretório
	# Sempre lembrar de envolver comandos não printáveis com "\[\]"
	# Cores
	local B_GRAY='\[\e[48;5;239m\]'
	local F_GRAY='\[\e[38;5;239m\]'
	local B_WHITE='\[\e[107m\]'
	local F_WHITE='\[\e[39m\]'
	local F_RED='\[\e[31m\]'
	local BOLD='\[\e[1m\]'
	local RESET='\[\e[0m\]'
	local RESET_LINE='\[\e[8G\e[K\]' # coluna 8; apagar linha até o final
	PS1="${RESET}${BOLD}${B_GRAY} Andre ${F_GRAY}${B_WHITE}${RESET}${BOLD}${F_GRAY}${B_WHITE} \W${F_RED}$(__git_ps1 ' [%s]')${RESET}${F_WHITE}${RESET}"
	local caps=" $(__capslock_statusline) \033[40;38;2;166;226;46m${RESET}"
	if (( $SOFT_CAPSLOCK ))
	then
		printf "${caps@P}" # redesenha CAPS
	fi
}

# Keybinds mapings
# -m mode; -x shell-functions
# Command Mode
bind -m vi-command -x '"\C-k": nnncd'
# bind -m vi-command -x '"\C-f": primeagen-tmux'

# Insert Mode
bind -m vi-insert -x '"\C-k": nnncd'
# bind -m vi-insert -x '"\C-f": primeagen-tmux'
bind -m vi-insert -x '"\C-l": __soft_capslock_toggle'
bind -m vi-insert -x $'"\x27": __readline_insert_pair \\\x27\\\x27' # ''
bind -m vi-insert -x $'"\\\x22": __readline_insert_pair \\\x22\\\x22' # ""
bind -m vi-insert -x $'"\\\x28": __readline_insert_pair \\\x28\\\x29' # ()
bind -m vi-insert -x $'"\\\x5B": __readline_insert_pair \\\x5B\\\x5D' # []
bind -m vi-insert -x $'"\\\x7B": __readline_insert_pair \\\x7B\\\x7D' # {}

